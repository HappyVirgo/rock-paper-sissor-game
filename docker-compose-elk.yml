version: "3.8"

services:
  # Elasticsearch stores and indexes the data.
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:${ELASTIC_VERSION}
    hostname: ${ELASTIC_HOSTNAME}
    restart: always
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 9200:9200 # Elasticsearch HTTP, external port / container port
      - 9300:9300 # Elasticsearch TCP transport, external port / container port
    env_file:
      - .env
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      - discovery.type=single-node
    volumes:
      #      - ./infrastructure/elk/elasticsearch/config/elasticsearch.yml:/etc/elasticsearch/config/elasticsearch.yml
      - ./infrastructure/elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch-data:/usr/share/elasticsearch/data # Persistence data
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

  # Logstash is used to collect, parse, transform, and buffer data from a variety of sources.
  logstash:
    container_name: logstash
    image: logstash:${ELASTIC_VERSION}
    hostname: ${LOGSTASH_HOSTNAME}
    restart: always
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 5044:5044 # Logstash Beats input, external port / container port
      - 50000:50000/tcp # external port / container port
      - 50000:50000/udp # external port / container port
      - 9600:9600 # external port / container port
    env_file:
      - .env
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
      - LOGSTASH_INTERNAL_PASSWORD=${LOGSTASH_INTERNAL_PASSWORD}
    volumes:
      - ./infrastructure/elk/logstash/pipeline:/usr/share/logstash/pipeline # Pipeline configuration
      - ./infrastructure/elk/logstash/config:/usr/share/logstash/config
    depends_on:
      - elasticsearch
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

  # Kibana acts as an analytics and visualization layer on top of Elasticsearch.
  kibana:
    container_name: kibana
    image: kibana:${ELASTIC_VERSION}
    hostname: ${KIBANA_HOSTNAME}
    restart: always
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 5601:5601 # external port / container port
    env_file:
      - .env
    environment:
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
    volumes:
      - ./infrastructure/elk/kibana/config:/usr/share/kibana/config
    depends_on:
      - elasticsearch
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

  filebeat:
    container_name: filebeat
    image: elastic/filebeat:${ELASTIC_VERSION}
    hostname: ${FILEBEAT_HOSTNAME}
    restart: always
    user: root # Allow access to log files and docker.sock
    env_file:
      - .env
    volumes:
      - ./infrastructure/elk/filebeat:/etc/filebeat  # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers    # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock                # Additional information about containers
      - filebeat-data:/usr/share/filebeat/data                 # Persistence data
    depends_on:
      - logstash
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

# persistent volumes location
volumes:
  elasticsearch-data:
    driver: local
  filebeat-data:
    driver: local

# networks
networks:
  rps_net:
    name: ${BACKEND_NETWORK}
